#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include "Colors.h"

using namespace std;



class Inventory {
protected:
    string backpack = R"(                                                                                          
                                                                                          
                                                                                          
                                                                                          
                                         :-=+******++=-.                                  
                                     .=**++++===+==+**#**=:                               
                                   -**+==-.          .=%%##*:.                            
                               .-+**++=-               -%%**+#*=.                         
                             =*#+++***=    .....::::::::*%%%%#*##+:::.                    
              :-=+***********#++****%%#################################*+++=-:            
           .+####**#**************#######################################**####*-         
          :*##########*****###*********************************########***#######=        
         :=+#########***#########******************##############################%        
         +**###%###***###########################################################%:       
        .+#+#**%#################################################################%:       
        :#++*+%%#################################################################%:       
        -%=+###%###############################***#*****************************##-       
        =%=-###%%######*****#********************##******########***##############%-      
        =%==#%#%%%%#%#***************************##*****#######****#################      
        +#=+#%%%%%%%#*#**####******#######*****####*+**************#################      
       .=*##**%%%%%##########################**##*#*+*************################%#.     
       -*#####@%%@%%#########################*##**#*+*******######################%#:     
      :=####%@@%%%%%#############################+=+***#=:+#######################%#-     
     .-=#%%%%@@%%%%%%#############################-=***#=+########################%%=     
      :-####%@#*%%%%##############################:=**##-*########################%%:     
       :##%%%@*#%%%%##############################:-*###+*########################%%:     
        ###%%#*#@%%%##############################%**########################%#####%-     
       .###%%*#@@%%%###############################**####################%#########%+     
       -###%%*#@@%%%###############################*#################%%%%%#########%#     
       +###%%*#@@%%%###################################################%%%%######%#%%     
       *###%%%%@@%%%###########################################%%######%#########%#%%     
       ####%%%%@@%%%#############################%##################%%%##########%%%%     
       *###%%%%@@%%%#############################%###############%%%%%############%%+     
       =###%%%%@@%%%#############################%##########%%###%%%%###########%%%#      
        ##%#%%%%@%%%#############################%#########%%%%%%%%%%#####%##%%##%#.      
        =#%%%%%%@@%%#############################%########%%%%%%%%%%%%%%%%%%%%%%%*        
         *%%%##%%%%%%##########################%#%#%%%%%%%%%%%%%%%%%%%*=-=+#%%%+:         
          *%%%=-*%%%%#########%%%%%%%%%%%%%#%#%#%######**++=+#######%%%%%#*+=:            
           =%%%*-:+%#######%%%%%%%#######**+==-====#%##+=-=#%#####*=-.                    
            .-+*##+=++=====+##%#+===--:--==++*###%%####*==+*++=-:                         
                            .+#%###**********++==-::..                                    
                                    .                                                     
                                                                                          
                                                                                          
                                                                                          
)";
    string punch = "%========%\n|  ”À¿ » |\n%========%";
    string pasport = "%=========%\n| œ¿—œŒ–“ |\n%=========%";
    vector <string> inventory = { punch, pasport };
public:
    Inventory() {}
    virtual void InvDo() const = 0;
};

class BaseInv : public Inventory {
public:
    void InvDo() const override {
        try {
            if (inventory.size() == 0) {
                throw inventory;
            }
            cout << "\t\t\t\t    [ ¬€ Œ“ –€À» »Õ¬≈Õ“¿–‹ ]\n\n" << backpack;
            cout << endl << endl;

            string skip = "\nÕ¿∆Ã»“≈ [ Enter ] ƒÀﬂ œ–ŒƒŒÀ∆≈Õ»ﬂ ";
            UssrStr(skip);
            cin.get();

            Clear();
            cout << "\n¬¿ÿ »Õ¬≈Õ“¿–‹: \n";
            for (int i = 0; i < inventory.size(); i++) {
                YellowStr(inventory[i]);
                cout << "\n";
            }
        }
        catch (...) {
            string error = "\n[ ¬¿ÿ »Õ¬≈Õ“¿–‹ Õ≈ ÃŒ∆≈“ ¡€“‹ œ”—“ ]\n"; // universal
            UssrStr(error);
        }

    }
};

class CraftInv : public Inventory {

};

class CheckInv : public Inventory {

};